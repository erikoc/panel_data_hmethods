plot(summary(KSS.fit))
Eup.fit <- Eup(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1, dim.criterion = "IPC1")
summary(Eup.fit)
plot(summary(Eup.fit))
OptDim(Eup.fit)
plm_fit <- plm(data_plm$Y ~ data_plm$X_1 + data_plm$X_2 -1, data = data_plm,  model = "within")
summary(plm_fit)
library(plm)
library(lmtest)
n <- 30
T <- 12
beta <- c(0.5,0.5)
data <- DataGeneratingFunction(T, n, beta = beta, DGP = "K1" , endogenous = FALSE, error = "homo")
data_plm <- data[["plm"]]
data_Tn <-  data[["Tn"]]
d <- data[["d"]]
KSS.fit <- KSS(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1)
summary(KSS.fit)
plot(summary(KSS.fit))
Eup.fit <- Eup(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1, dim.criterion = "IPC1")
summary(Eup.fit)
plot(summary(Eup.fit))
OptDim(Eup.fit)
plm_fit <- plm(data_plm$Y ~ data_plm$X_1 + data_plm$X_2 -1, data = data_plm,  model = "within")
summary(plm_fit)
library(plm)
library(lmtest)
n <- 30
T <- 12
beta <- c(0.5,0.5)
data <- DataGeneratingFunction(T, n, beta = beta, DGP = "K1" , endogenous = FALSE, error = "homo")
data_plm <- data[["plm"]]
data_Tn <-  data[["Tn"]]
d <- data[["d"]]
KSS.fit <- KSS(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1)
summary(KSS.fit)
plot(summary(KSS.fit))
Eup.fit <- Eup(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1, dim.criterion = "PC1")
summary(Eup.fit)
plot(summary(Eup.fit))
OptDim(Eup.fit)
plm_fit <- plm(data_plm$Y ~ data_plm$X_1 + data_plm$X_2 -1, data = data_plm,  model = "within")
summary(plm_fit)
library(plm)
library(lmtest)
n <- 30
T <- 12
beta <- c(0.5,0.5)
data <- DataGeneratingFunction(T, n, beta = beta, DGP = "K1" , endogenous = FALSE, error = "homo")
data_plm <- data[["plm"]]
data_Tn <-  data[["Tn"]]
d <- data[["d"]]
KSS.fit <- KSS(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1)
summary(KSS.fit)
plot(summary(KSS.fit))
Eup.fit <- Eup(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1, dim.criterion = "PC1")
summary(Eup.fit)
plot(summary(Eup.fit))
OptDim(Eup.fit)
plm_fit <- plm(data_plm$Y ~ data_plm$X_1 + data_plm$X_2 -1, data = data_plm,  model = "within")
summary(plm_fit)
library(plm)
library(lmtest)
n <- 30
T <- 12
beta <- c(0.5,0.5)
data <- DataGeneratingFunction(T, n, beta = beta, DGP = "K1" , endogenous = FALSE, error = "homo")
data_plm <- data[["plm"]]
data_Tn <-  data[["Tn"]]
d <- data[["d"]]
KSS.fit <- KSS(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1)
summary(KSS.fit)
plot(summary(KSS.fit))
Eup.fit <- Eup(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1, dim.criterion = "PC1")
summary(Eup.fit)
plot(summary(Eup.fit))
OptDim(Eup.fit)
plm_fit <- plm(data_plm$Y ~ data_plm$X_1 + data_plm$X_2 -1, data = data_plm,  model = "within")
summary(plm_fit)
load("C:/Users/spammer/Desktop/M.Sc. in Economics/So 2023/panel_data_hmethods/Application/application_results.RData")
boot_results_KSSdy
boot_cis
summary(boot_results_KSSdy)
bootstrap_results <- boot_results_KSSdy$t[,1]
median_value <- median(bootstrap_results)
ggplot(data.frame(BootstrapValues = bootstrap_results), aes(x = BootstrapValues)) +
geom_histogram(aes(y = ..density..), fill = "blue", color = "black", binwidth = 0.0005, alpha = 0.7) +
geom_density(color = "red", size = 1) +
geom_vline(aes(xintercept = median_value), color = "lightgray", linetype = "dashed", size = 1) +
annotate("text", x = median_value - 0.004, y = max(density(bootstrap_results)$y) + 0.1, label = paste("Median:", round(median_value, 4)), vjust = -0.5, color = "black") +
labs(
x = "Bootstrap Estimates",
y = "Density"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", size = 0.5),
axis.ticks = element_line(color = "black"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)
)
install.packages("scales")
install.packages("scales")
bootstrap_results <-boot_results_KSSdy$t[,1]
median_value <- boot_results_KSS_summary[1,5]
boot_results_KSS_summary <-summary(boot_results_KSSdy)
bootstrap_results <-boot_results_KSSdy$t[,1]
median_value <- boot_results_KSS_summary[1,5]
library(ggplot2)
library(scales) # For the comma function
bootstrap_results <- boot_results_KSSdy$t[,1]
median_value <- median(bootstrap_results)
ggplot(data.frame(BootstrapValues = bootstrap_results), aes(x = BootstrapValues)) +
geom_histogram(aes(y = ..density..), fill = "blue", color = "black", binwidth = 0.0005, alpha = 0.7) +
geom_density(color = "red", size = 1) +
geom_vline(aes(xintercept = median_value), color = "lightgray", linetype = "dashed", size = 1) +
annotate("text", x = median_value - 0.008, y = max(density(bootstrap_results)$y) + 0.1, label = paste("Median:", comma(round(median_value, 4))), vjust = -0.5, color = "black") +
labs(
x = "Bootstrap Estimates",
y = "Density"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", size = 0.5),
axis.ticks = element_line(color = "black"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)
)
library(scales)
bootstrap_results <- boot_results_KSSdy$t[,1]
median_value <- median(bootstrap_results)
ggplot(data.frame(BootstrapValues = bootstrap_results), aes(x = BootstrapValues)) +
geom_histogram(aes(y = ..density..), fill = "blue", color = "black", binwidth = 0.0005, alpha = 0.7) +
geom_density(color = "red", size = 1) +
geom_vline(aes(xintercept = median_value), color = "lightgray", linetype = "dashed", size = 1) +
annotate("text", x = median_value - 0.008, y = max(density(bootstrap_results)$y) + 0.1, label = paste("Median:", comma(round(median_value, 4))), vjust = -0.5, color = "black") +
labs(
x = "Bootstrap Estimates",
y = "Density"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", size = 0.5),
axis.ticks = element_line(color = "black"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)
)
median_value
library(ggplot2)
library(scales)
bootstrap_results <- boot_results_KSSdy$t[,1]
median_value <- median(bootstrap_results)
ggplot(data.frame(BootstrapValues = bootstrap_results), aes(x = BootstrapValues)) +
geom_histogram(aes(y = ..density..), fill = "blue", color = "black", binwidth = 0.0005, alpha = 0.7) +
geom_density(color = "red", size = 1) +
geom_vline(aes(xintercept = median_value), color = "lightgray", linetype = "dashed", size = 1) +
annotate("text", x = median_value - 0.008, y = max(density(bootstrap_results)$y) + 0.1, label = paste("Median:", sprintf("%.4f", median_value)), vjust = -0.5, color = "black") +
labs(
x = "Bootstrap Estimates",
y = "Density"
) +
theme_minimal() +
theme(
plot.title = element_text(hjust = 0.5),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(color = "black", size = 0.5),
axis.ticks = element_line(color = "black"),
axis.title.x = element_text(size = 14),
axis.title.y = element_text(size = 14),
axis.text = element_text(size = 12)
)
AER_panel_Transitions <- AER_panel %>%
arrange(country_name, year) %>%
group_by(country_name) %>%
mutate(lag_dem = dplyr::lag(dem, 1)) %>%
ungroup()
AER_panel_Transitions$transition <- AER_panel_Transitions$dem - AER_panel_Transitions$lag_dem
transitions <- AER_panel_Transitions %>%
filter(transition %in% c(-1, 1))
print(transitions)
View(transitions)
transtions
view(transitions)
View(transitions)
print(transitions, n = 1000)
xtable(transitions)
library(xtable)
xtable(transitions)
subset_df_1 <- AER_panel_Transitions %>% filter(transition == 1)
latex_table_1 <- xtable(subset_df_1)
print(latex_table_1, type = "latex")
subset_df_minus_1 <- AER_panel_Transitions %>% filter(transition == -1)
latex_table_minus_1 <- xtable(subset_df_minus_1)
print(latex_table_minus_1, type = "latex")
constant_values <- AER_panel %>%
group_by(country_name) %>%
summarize(overall_mean = mean(dem)) %>%
ungroup() %>%
filter(overall_mean %in% c(0,1))
always_1_countries <- constant_values %>%
filter(overall_mean == 1) %>%
pull(country_name)
always_0_countries <- constant_values %>%
filter(overall_mean == 0) %>%
pull(country_name)
xtable(always_1_countries)
always_0_countries
always_1_countries
xtable(AER$country_name)
AER$country_name
unique(AER$country_name)
length(subset_df_1)
length(unique(subset_df_1$country_name))
length(unique(subset_df_minus_1$country_name))
length(always_1_countries)
length(always_0_countries)
load("C:/Users/spammer/Desktop/M.Sc. in Economics/So 2023/panel_data_hmethods/Simulations/sim_results.RData")
all_results_autocorr_high$T12_n30_nsim1000_K1$KSS$power1
mean(all_results_autocorr_high$T12_n30_nsim1000_K1$KSS$power1)
mean(all_results_autocorr_high$T30_n30_nsim1000_K1$KSS$power1)
mean(all_results_autocorr_high$T30_n3100_nsim1000_K1$KSS$power1)
mean(all_results_autocorr_high$T30_n100_nsim1000_K1$KSS$power1)
mean(all_results_autocorr_high$Tqw_n100_nsim1000_K1$KSS$power1)
mean(all_results_autocorr_high$T12_n100_nsim1000_K1$KSS$power1)
mean(all_results_autocorr_high$T12_n100_nsim1000_K1$KSS$power1)
mean(all_results_autocorr_high$T12_n100_nsim1000_K1$Within$power1)
mean(all_results_autocorr_high$T12_n100_nsim1000_K1$Eup$power1)
mean(all_results_autocorr_high$T12_n100_nsim1000_K1$Bai$p1)
mean(all_results_autocorr_high$T12_n100_nsim1000_K1$Bai$power1)
mean(all_results_autocorr_high$T12_n100_nsim1000_K1$Bai.true$power1)
library(plm)
library(lmtest)
n <- 30
T <- 12
beta <- c(0.5,0.5)
data <- DataGeneratingFunction(T, n, beta = beta, DGP = "K1" , endogenous = FALSE, error = "homo")
data_plm <- data[["plm"]]
data_Tn <-  data[["Tn"]]
d <- data[["d"]]
KSS.fit <- KSS(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1)
summary(KSS.fit)
plot(summary(KSS.fit))
Eup.fit <- Eup(data_Tn$Y ~ data_Tn$X_1 + data_Tn$X_2 -1, dim.criterion = "PC1")
summary(Eup.fit)
plot(summary(Eup.fit))
OptDim(Eup.fit)
plm_fit <- plm(data_plm$Y ~ data_plm$X_1 + data_plm$X_2 -1, data = data_plm,  model = "within")
summary(plm_fit)
sum <- KSS.fit
sum$slope.para
sum
sum <- summary(KSS.fit)
sum$coefficients
sum$coefficients[1,4]
sum$coefficients[2,4]
all_means
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
}
setwd("C:/Users/spammer/Desktop/M.Sc. in Economics/So 2023/panel_data_hmethods/Simulations")
source("sim_dgp_fn.R")
source("sim_montecarlo_fn.R")
source("sim_final_fn.R")
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
}
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
#b = all_results_b,
#bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both
#autocorr_low = all_results_autocorr_low,
#autocorr_high = all_results_autocorr_high,
#KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
}
setwd("C:/Users/spammer/Desktop/M.Sc. in Economics/So 2023/panel_data_hmethods/Simulations")
source("sim_dgp_fn.R")
source("sim_montecarlo_fn.R")
source("sim_final_fn.R")
set.seed(42)
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
}
setwd("C:/Users/spammer/Desktop/M.Sc. in Economics/So 2023/panel_data_hmethods/Simulations")
source("sim_dgp_fn.R")
source("sim_montecarlo_fn.R")
source("sim_final_fn.R")
setwd("C:/Users/spammer/Desktop/M.Sc. in Economics/So 2023/panel_data_hmethods/Simulations")
source("sim_dgp_fn.R")
source("sim_montecarlo_fn.R")
source("sim_final_fn.R")
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
}
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
}
setwd("C:/Users/spammer/Desktop/M.Sc. in Economics/So 2023/panel_data_hmethods/Simulations")
source("sim_dgp_fn.R")
source("sim_montecarlo_fn.R")
source("sim_final_fn.R")
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
setwd("C:/Users/spammer/Desktop/M.Sc. in Economics/So 2023/panel_data_hmethods/Simulations")
source("sim_dgp_fn.R")
source("sim_montecarlo_fn.R")
source("sim_final_fn.R")
set.seed(42)
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
}
setwd("C:/Users/spammer/Desktop/M.Sc. in Economics/So 2023/panel_data_hmethods/Simulations")
source("sim_dgp_fn.R")
source("sim_montecarlo_fn.R")
source("sim_final_fn.R")
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
}
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
}
DGPs <- c("K1", "K2", "K3", "K4")
scenarios <- list(
b = all_results_b,
bT = all_results_bT,
hetero_time = all_results_hetero_time,
hetero_individual = all_results_hetero_individual,
hetero_both = all_results_hetero_both,
autocorr_low = all_results_autocorr_low,
autocorr_high = all_results_autocorr_high,
KSSdim = all_results_KSSdim
)
for (scenario_name in names(scenarios)) {
for (DGP in DGPs) {
all_means <- calculate_means_for_paths_and_estimators(scenarios[[scenario_name]], DGP)
generate_combined_latex_table(all_means, scenario_name, DGP)
}
}
all_results_KSSdim <- list()
for (T_val in T) {
for (n_val in n) {
nsim_val <- ifelse(n_val == 300, 500, 1000)
for (DGP_type in DGPs) {
results <- doMonteCarlo(nsim_val, T_val, n_val, beta, DGP_type, endogenous = FALSE, error = "homo", true.dim = TRUE)
label <- paste0("T", T_val, "_n", n_val, "_nsim", nsim_val, "_", DGP_type)
all_results_KSSdim[[label]] <- results
}
}
}
